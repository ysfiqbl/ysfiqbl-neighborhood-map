$(document).ready(function() {
    var Category = function(title) {
        var self = this;

        self.title = ko.observable(category);
    }

    function Location(marker) {
        var self = this;

        self.marker = marker;
        self.title = ko.observable(marker.title);
        self.category = ko.observable();
        self.labels = ko.observableArray();
        self.lat = ko.observable();
        self.lng = ko.observable();
    }
    (function() {
        this.setTitle = function(title) {
            this.title(title);
            this.marker.title = title;
        };

        this.setCategory = function(category) {
            this.category(category);
        };

        this.addLabel = function(label) {
            if (this.categories.indexOf(category) < 0) {
                this.categories.push(category);
            } else {
                alert("Location already belongs to category.");
            }
        };

        this.removeLabel = function(category) {
            this.categories.remove(category);
        };
    }).call(Location.prototype);

    var ViewModel = function() {
        var self = this;
        self.localStoreLocations = [];
        self.allLocations = ko.observableArray();
        self.visibleLocations = ko.observableArray();
        self.map;

        self.initialize = function() {
            self.mapOptions = {
                zoom: 8,
                center: new google.maps.LatLng(-34.397, 150.644),
                panControl: true,
                panControlOptions: {
                    position: google.maps.ControlPosition.RIGHT_BOTTOM
                },
                zoomControl: true,
                zoomControlOptions: {
                    style: google.maps.ZoomControlStyle.SMALL,
                    position: google.maps.ControlPosition.RIGHT_BOTTOM
                }
            };
            self.map = new google.maps.Map(document.getElementById('map-canvas'), self.mapOptions);

            self.loadLocations();

            google.maps.event.addListener(self.map, 'click', function(event) {
                var loc = self.addLocationToMap(event.latLng.lat(), event.latLng.lng());
                self.saveLocation(loc);
            });

        }

        google.maps.event.addDomListener(window, 'load', self.initialize);

        self.removeLocation = function(loc) {
            loc.marker.setMap(null);
            self.allLocations.remove(loc);
        };

        self.addLocationToMap = function(lat, lng) {
            var id = new Date().getTime();
            var contentString = '<div id = "' + id + '">' + id + '<button data-bind="click: removeLocation">Delete</button></div>';
            var loc = new Location(new google.maps.Marker({
                position: new google.maps.LatLng(lat, lng),
                map: self.map,
                title: '' + new Date().getTime(),
                draggable: true,
                infoWindow: new google.maps.InfoWindow({
                    content: contentString
                })
            }));

            google.maps.event.addListener(loc.marker, 'click', function() {
                loc.marker.infoWindow.open(self.map, loc.marker)
            });



            google.maps.event.addListener(loc.marker.infoWindow, 'domready', (function(i) {
                return function() {
                    $(':button').click(function(e) {
                        var button = $(e.target).text();
                        switch (button) {
                            case 'Delete':
                                self.removeLocation(i);
                                break;
                            case 'Save':
                                console.log('Save marker ' + i);
                                break;
                            default:
                                console.log('Default, do nothing');
                                break;
                        }
                    });
                }
            })(loc));

            return loc;
        };

        self.saveToLocalStorage = function(loc) {
            self.allLocations.push(loc);
            var locationJSON = {
                'title': loc.title(),
                'lat': loc.marker.getPosition().lat(),
                'lng': loc.marker.getPosition().lng(),
                'labels': loc.labels(),
                'category': loc.category()
            }

            self.localStoreLocations.push(locationJSON);
            localStorage.locations = JSON.stringify(self.localStoreLocations);
        };

        self.loadLocations = function() {
            if (localStorage.locations) {
                self.localStoreLocations = JSON.parse(localStorage.locations);
                for (var i = 0; i < self.localStoreLocations.length; i++) {
                    var loc = self.localStoreLocations[i];
                    self.addLocationToMap(loc.lat, loc.lng);
                }
            }
        }
    };

    ko.applyBindings(new ViewModel());
});